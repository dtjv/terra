import { phone } from 'phone'
import { parseOneAddress } from 'email-addresses'
import states from '@/data/states.json'

export const formFields = {
  firstName: {
    name: 'firstName',
    label: 'First name',
    placeholder: '',
    type: 'text',
    required: true,
    max: '',
    min: '',
    maxLength: '80',
    minLength: '',
    pattern: '',
    validate: {},
  },
  lastName: {
    name: 'lastName',
    label: 'Last name',
    placeholder: '',
    type: 'text',
    required: true,
    max: '',
    min: '',
    maxLength: '80',
    minLength: '',
    pattern: '',
    validate: {},
  },
  email: {
    name: 'email',
    label: 'Email',
    placeholder: '',
    type: 'email',
    required: false,
    max: '',
    min: '',
    maxLength: '100',
    minLength: '',
    pattern: '',
    validate: {
      format: (value: string) =>
        value ? !!parseOneAddress(value) || 'Invalid format' : true,
    },
  },
  phone: {
    name: 'phone',
    label: 'Phone',
    placeholder: 'xxx-xxx-xxxx',
    type: 'text',
    required: true,
    max: '',
    min: '',
    maxLength: '12',
    minLength: '7',
    pattern: '',
    validate: {
      format: (value: string) => phone(value).isValid || 'Invalid format',
    },
  },
  destinationAddress: {
    street: {
      name: 'destinationAddress.street',
      label: 'Street address',
      placeholder: '555 Market St.',
      type: 'text',
      required: true,
      max: '',
      min: '',
      maxLength: '80',
      minLength: '',
      pattern: '',
      validate: {},
    },
    unit: {
      name: 'destinationAddress.unit',
      label: 'Unit No.',
      placeholder: '',
      type: 'text',
      required: false,
      max: '',
      min: '',
      maxLength: '5',
      minLength: '',
      pattern: '',
      validate: {},
    },
    city: {
      name: 'destinationAddress.city',
      label: 'City',
      placeholder: 'Salem',
      type: 'text',
      required: true,
      max: '',
      min: '',
      maxLength: '80',
      minLength: '',
      pattern: '',
      validate: {},
    },
    state: {
      name: 'destinationAddress.state',
      label: 'State',
      placeholder: 'OR',
      type: 'select',
      required: true,
      max: '',
      min: '',
      maxLength: '2',
      minLength: '2',
      pattern: '',
      options: Object.keys(states).join(';'),
      validate: {},
    },
    zip: {
      name: 'destinationAddress.zip',
      label: 'Zip / Postal',
      placeholder: 'Salem',
      type: 'text',
      required: true,
      max: '',
      min: '',
      maxLength: '15',
      minLength: '',
      pattern: '',
      validate: {},
    },
  },
}
